pluginManagement {
  resolutionStrategy {
    eachPlugin {
      if (requested.id.namespace == 'app.cash') {
        useModule('app.cash.sqldelight:gradle-plugin:+')
      }
    }
  }
  repositories {
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    mavenCentral()
    google()
    gradlePluginPortal()
    maven { url 'https://www.jetbrains.com/intellij-repository/releases' }
    maven { url "https://cache-redirector.jetbrains.com/intellij-dependencies" }
    maven { url "../build/localMaven" }
  }
}

dependencyResolutionManagement {
  versionCatalogs {
    libs {
      from(files("../gradle/libs.versions.toml"))
    }
  }
  repositories {
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    mavenCentral()
    google()
    maven { url "../build/localMaven" }
  }
}

rootProject.name = "sample"

include ':android'
include ':common'
include ':web'

includeBuild('..') {
  dependencySubstitution {
    substitute module("app.cash.sqldelight:primitive-adapters") using project(":adapters:primitive-adapters")
    substitute module("app.cash.sqldelight:sqlite-driver") using project(":drivers:sqlite-driver")
    substitute module("app.cash.sqldelight:android-driver") using project(":drivers:android-driver")
    substitute module("app.cash.sqldelight:native-driver") using project(":drivers:native-driver")
    substitute module("app.cash.sqldelight:sqljs-driver") using project(":drivers:sqljs-driver")
    substitute module("app.cash.sqldelight:runtime") using project(":runtime")
    substitute module("app.cash.sqldelight:runtime-jvm") using project(":runtime")
    substitute module("app.cash.sqldelight:gradle-plugin") using project(":sqldelight-gradle-plugin")
    substitute module("app.cash.sqldelight:sqlite-3-18-dialect") using project(":dialects:sqlite-3-18")
    substitute module("app.cash.sqldelight:async-extensions") using project(":extensions:async-extensions")
  }
}
